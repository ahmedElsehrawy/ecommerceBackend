/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context as Context } from "./src/context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  UserWhereUniqueInput: { // input type
    id: number; // Int!
  }
  addCartItemInput: { // input type
    cartId: number; // Int!
    productId: number; // Int!
    quantity: number; // Int!
  }
  createAddressInput: { // input type
    city: string; // String!
    country: string; // String!
    houseNumber: string; // String!
    postalCode: string; // String!
    street: string; // String!
    telephone: string; // String!
    userId: number; // Int!
  }
  createCategoryInput: { // input type
    name: string; // String!
  }
  createDiscountInput: { // input type
    active: boolean; // Boolean!
    name: string; // String!
    percent: number; // Int!
  }
  createOrderInput: { // input type
    addressId: number; // Int!
    orderStatus: NexusGenEnums['OrderStatus']; // OrderStatus!
    totalPrice: number; // Float!
    userId: number; // Int!
  }
  createOrderItemInput: { // input type
    orderId?: number | null; // Int
    productId?: number | null; // Int
    quantity?: number | null; // Int
  }
  createProductInput: { // input type
    categoryId: number; // Int!
    description: string; // String!
    discountId?: number | null; // Int
    image: string; // String!
    name: string; // String!
    price: number; // Float!
  }
  createUserInput: { // input type
    email: string; // String!
    firstName: string; // String!
    lastName: string; // String!
    password: string; // String!
    phone: string; // String!
  }
  getCartWhereUniqueInput: { // input type
    userId: number; // Int!
  }
  getOneCategoryWhereUniqueInput: { // input type
    id: number; // Int!
  }
  getOrderInput: { // input type
    id: number; // Int!
  }
  getOrderItemsIdInput: { // input type
    orderId: number; // Int!
  }
  getOrdersInput: { // input type
    userId: number; // Int!
  }
  getProductInput: { // input type
    id: number; // Int!
  }
  getProductsInput: { // input type
    categoryId: number; // Int!
  }
  getUserAddressesInput: { // input type
    userId: number; // Int!
  }
  getUserWhereUniqueInput: { // input type
    id: number; // Int!
  }
  removeCartItemWhereUniqueInput: { // input type
    id: number; // Int!
  }
  updateProdcutInput: { // input type
    categoryId?: number | null; // Int
    description?: string | null; // String
    discountId?: number | null; // Int
    image?: string | null; // String
    name?: string | null; // String
    price?: number | null; // Float
  }
  updateProdcutWhereUniqueId: { // input type
    id: number; // Int!
  }
}

export interface NexusGenEnums {
  OrderStatus: "CANCELED" | "COMPLETED" | "ONGOING"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Address: { // root type
    city: string; // String!
    country: string; // String!
    houseNumber: string; // String!
    id: number; // Int!
    postalCode: string; // String!
    street: string; // String!
    telephone: string; // String!
    userId: number; // Int!
  }
  Cart: { // root type
    id: number; // Int!
    items: NexusGenRootTypes['CartItem'][]; // [CartItem!]!
    totalPrice: number; // Float!
    userId: number; // Int!
  }
  CartItem: { // root type
    cartId: number; // Int!
    id: number; // Int!
    productId: number; // Int!
    quantity: number; // Int!
  }
  Category: { // root type
    createdAt: string; // String!
    id: number; // Int!
    name: string; // String!
    updatedAt: string; // String!
  }
  Discount: { // root type
    active: boolean; // Boolean!
    createdAt: string; // String!
    id: number; // Int!
    name: string; // String!
    percent: number; // Int!
    updatedAt: string; // String!
  }
  Mutation: {};
  Order: { // root type
    addressId: number; // Int!
    createdAt: string; // String!
    id: number; // Int!
    orderStatus: NexusGenEnums['OrderStatus']; // OrderStatus!
    totalPrice: number; // Float!
    updatedAt: string; // String!
    userId: number; // Int!
  }
  Product: { // root type
    categoryId: number; // Int!
    createdAt: string; // String!
    description: string; // String!
    discountId?: number | null; // Int
    id: number; // Int!
    image: string; // String!
    name: string; // String!
    price: number; // Float!
    updatedAt: string; // String!
  }
  Query: {};
  User: { // root type
    balance: number; // Float!
    createdAt: string; // String!
    email: string; // String!
    firstName: string; // String!
    id: number; // Int!
    lastName: string; // String!
    password: string; // String!
    phone: string; // String!
    updatedAt: string; // String!
  }
  orderItem: { // root type
    createdAt: string; // String!
    id: number; // Int!
    orderId: number; // Int!
    productId: number; // Int!
    quantity: number; // Int!
    updatedAt: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Address: { // field return type
    city: string; // String!
    country: string; // String!
    houseNumber: string; // String!
    id: number; // Int!
    postalCode: string; // String!
    street: string; // String!
    telephone: string; // String!
    userId: number; // Int!
  }
  Cart: { // field return type
    id: number; // Int!
    items: NexusGenRootTypes['CartItem'][]; // [CartItem!]!
    totalPrice: number; // Float!
    userId: number; // Int!
  }
  CartItem: { // field return type
    cartId: number; // Int!
    id: number; // Int!
    productId: number; // Int!
    quantity: number; // Int!
  }
  Category: { // field return type
    createdAt: string; // String!
    id: number; // Int!
    name: string; // String!
    updatedAt: string; // String!
  }
  Discount: { // field return type
    active: boolean; // Boolean!
    createdAt: string; // String!
    id: number; // Int!
    name: string; // String!
    percent: number; // Int!
    updatedAt: string; // String!
  }
  Mutation: { // field return type
    addCartItem: NexusGenRootTypes['CartItem']; // CartItem!
    createAddress: NexusGenRootTypes['Address']; // Address!
    createCategory: NexusGenRootTypes['Category']; // Category!
    createOrder: NexusGenRootTypes['Order']; // Order!
    createOrderItem: NexusGenRootTypes['orderItem']; // orderItem!
    createProduct: NexusGenRootTypes['Product']; // Product!
    deleteAddress: NexusGenRootTypes['Address']; // Address!
    deleteCategory: NexusGenRootTypes['Category']; // Category!
    deleteOrder: NexusGenRootTypes['Order']; // Order!
    deleteProduct: NexusGenRootTypes['Product']; // Product!
    deleteUser: NexusGenRootTypes['User']; // User!
    register: NexusGenRootTypes['User']; // User!
    removeCartItem: NexusGenRootTypes['CartItem']; // CartItem!
    updateProdcut: NexusGenRootTypes['Product']; // Product!
  }
  Order: { // field return type
    addressId: number; // Int!
    createdAt: string; // String!
    id: number; // Int!
    orderStatus: NexusGenEnums['OrderStatus']; // OrderStatus!
    totalPrice: number; // Float!
    updatedAt: string; // String!
    userId: number; // Int!
  }
  Product: { // field return type
    categoryId: number; // Int!
    createdAt: string; // String!
    description: string; // String!
    discountId: number | null; // Int
    id: number; // Int!
    image: string; // String!
    name: string; // String!
    price: number; // Float!
    updatedAt: string; // String!
  }
  Query: { // field return type
    createDiscount: NexusGenRootTypes['Discount']; // Discount!
    getCart: NexusGenRootTypes['Cart']; // Cart!
    getCategories: NexusGenRootTypes['Category'][]; // [Category!]!
    getManyOrders: NexusGenRootTypes['Order'][]; // [Order!]!
    getOneAddress: NexusGenRootTypes['Address']; // Address!
    getOneCategory: NexusGenRootTypes['Category']; // Category!
    getOneOrder: NexusGenRootTypes['Order']; // Order!
    getOrderItems: NexusGenRootTypes['orderItem'][]; // [orderItem!]!
    getProduct: NexusGenRootTypes['Product']; // Product!
    getProducts: NexusGenRootTypes['Product'][]; // [Product!]!
    getUserAddresses: NexusGenRootTypes['Address'][]; // [Address!]!
    user: NexusGenRootTypes['User']; // User!
  }
  User: { // field return type
    balance: number; // Float!
    createdAt: string; // String!
    email: string; // String!
    firstName: string; // String!
    id: number; // Int!
    lastName: string; // String!
    password: string; // String!
    phone: string; // String!
    updatedAt: string; // String!
  }
  orderItem: { // field return type
    createdAt: string; // String!
    id: number; // Int!
    orderId: number; // Int!
    productId: number; // Int!
    quantity: number; // Int!
    updatedAt: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Address: { // field return type name
    city: 'String'
    country: 'String'
    houseNumber: 'String'
    id: 'Int'
    postalCode: 'String'
    street: 'String'
    telephone: 'String'
    userId: 'Int'
  }
  Cart: { // field return type name
    id: 'Int'
    items: 'CartItem'
    totalPrice: 'Float'
    userId: 'Int'
  }
  CartItem: { // field return type name
    cartId: 'Int'
    id: 'Int'
    productId: 'Int'
    quantity: 'Int'
  }
  Category: { // field return type name
    createdAt: 'String'
    id: 'Int'
    name: 'String'
    updatedAt: 'String'
  }
  Discount: { // field return type name
    active: 'Boolean'
    createdAt: 'String'
    id: 'Int'
    name: 'String'
    percent: 'Int'
    updatedAt: 'String'
  }
  Mutation: { // field return type name
    addCartItem: 'CartItem'
    createAddress: 'Address'
    createCategory: 'Category'
    createOrder: 'Order'
    createOrderItem: 'orderItem'
    createProduct: 'Product'
    deleteAddress: 'Address'
    deleteCategory: 'Category'
    deleteOrder: 'Order'
    deleteProduct: 'Product'
    deleteUser: 'User'
    register: 'User'
    removeCartItem: 'CartItem'
    updateProdcut: 'Product'
  }
  Order: { // field return type name
    addressId: 'Int'
    createdAt: 'String'
    id: 'Int'
    orderStatus: 'OrderStatus'
    totalPrice: 'Float'
    updatedAt: 'String'
    userId: 'Int'
  }
  Product: { // field return type name
    categoryId: 'Int'
    createdAt: 'String'
    description: 'String'
    discountId: 'Int'
    id: 'Int'
    image: 'String'
    name: 'String'
    price: 'Float'
    updatedAt: 'String'
  }
  Query: { // field return type name
    createDiscount: 'Discount'
    getCart: 'Cart'
    getCategories: 'Category'
    getManyOrders: 'Order'
    getOneAddress: 'Address'
    getOneCategory: 'Category'
    getOneOrder: 'Order'
    getOrderItems: 'orderItem'
    getProduct: 'Product'
    getProducts: 'Product'
    getUserAddresses: 'Address'
    user: 'User'
  }
  User: { // field return type name
    balance: 'Float'
    createdAt: 'String'
    email: 'String'
    firstName: 'String'
    id: 'Int'
    lastName: 'String'
    password: 'String'
    phone: 'String'
    updatedAt: 'String'
  }
  orderItem: { // field return type name
    createdAt: 'String'
    id: 'Int'
    orderId: 'Int'
    productId: 'Int'
    quantity: 'Int'
    updatedAt: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addCartItem: { // args
      input: NexusGenInputs['addCartItemInput']; // addCartItemInput!
    }
    createAddress: { // args
      input: NexusGenInputs['createAddressInput']; // createAddressInput!
    }
    createCategory: { // args
      input: NexusGenInputs['createCategoryInput']; // createCategoryInput!
    }
    createOrder: { // args
      input: NexusGenInputs['createOrderInput']; // createOrderInput!
    }
    createOrderItem: { // args
      input: NexusGenInputs['createOrderItemInput']; // createOrderItemInput!
    }
    createProduct: { // args
      input: NexusGenInputs['createProductInput']; // createProductInput!
    }
    deleteAddress: { // args
      where: NexusGenInputs['getUserWhereUniqueInput']; // getUserWhereUniqueInput!
    }
    deleteCategory: { // args
      where: NexusGenInputs['getOneCategoryWhereUniqueInput']; // getOneCategoryWhereUniqueInput!
    }
    deleteOrder: { // args
      where: NexusGenInputs['getOrderInput']; // getOrderInput!
    }
    deleteProduct: { // args
      where: NexusGenInputs['getProductInput']; // getProductInput!
    }
    deleteUser: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    register: { // args
      input: NexusGenInputs['createUserInput']; // createUserInput!
    }
    removeCartItem: { // args
      where: NexusGenInputs['removeCartItemWhereUniqueInput']; // removeCartItemWhereUniqueInput!
    }
    updateProdcut: { // args
      input: NexusGenInputs['updateProdcutInput']; // updateProdcutInput!
      productId: NexusGenInputs['updateProdcutWhereUniqueId']; // updateProdcutWhereUniqueId!
    }
  }
  Query: {
    createDiscount: { // args
      input: NexusGenInputs['createDiscountInput']; // createDiscountInput!
    }
    getCart: { // args
      where: NexusGenInputs['getCartWhereUniqueInput']; // getCartWhereUniqueInput!
    }
    getManyOrders: { // args
      where: NexusGenInputs['getOrdersInput']; // getOrdersInput!
    }
    getOneAddress: { // args
      where: NexusGenInputs['getUserWhereUniqueInput']; // getUserWhereUniqueInput!
    }
    getOneCategory: { // args
      where: NexusGenInputs['getOneCategoryWhereUniqueInput']; // getOneCategoryWhereUniqueInput!
    }
    getOneOrder: { // args
      where: NexusGenInputs['getOrderInput']; // getOrderInput!
    }
    getOrderItems: { // args
      where: NexusGenInputs['getOrderItemsIdInput']; // getOrderItemsIdInput!
    }
    getProduct: { // args
      where: NexusGenInputs['getProductInput']; // getProductInput!
    }
    getProducts: { // args
      where: NexusGenInputs['getProductsInput']; // getProductsInput!
    }
    getUserAddresses: { // args
      where: NexusGenInputs['getUserAddressesInput']; // getUserAddressesInput!
    }
    user: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}