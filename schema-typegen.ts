/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context as Context } from "./src/context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  UserWhereUniqueInput: { // input type
    id: number; // Int!
  }
  addCartItemInput: { // input type
    productId: number; // Int!
    quantity: number; // Int!
  }
  addToFavouriteInput: { // input type
    productId: number; // Int!
    userId: number; // Int!
  }
  cartItemInput: { // input type
    productId: number; // Int!
    quantity: number; // Int!
  }
  createAddressInput: { // input type
    city: string; // String!
    country: string; // String!
    houseNumber: string; // String!
    postalCode: string; // String!
    street: string; // String!
    telephone: string; // String!
    userId: number; // Int!
  }
  createCategoryInput: { // input type
    name: string; // String!
  }
  createDiscountInput: { // input type
    active: boolean; // Boolean!
    name: string; // String!
    percent: number; // Int!
  }
  createOrderInput: { // input type
    addressId: number; // Int!
    products: Array<NexusGenInputs['cartItemInput'] | null>; // [cartItemInput]!
    userId: number; // Int!
  }
  createProductInput: { // input type
    categoryId: number; // Int!
    description: string; // String!
    discountId?: number | null; // Int
    gallery?: Array<NexusGenInputs['productImage'] | null> | null; // [productImage]
    mainImage: string; // String!
    name: string; // String!
    price: number; // Float!
  }
  createUserInput: { // input type
    email: string; // String!
    firstName: string; // String!
    lastName: string; // String!
    password: string; // String!
    phone: string; // String!
  }
  deleteDiscountWhereUniqeInput: { // input type
    id: number; // Int!
  }
  getOneCategoryWhereUniqueInput: { // input type
    id: number; // Int!
  }
  getOrderInput: { // input type
    id: number; // Int!
  }
  getOrderItemsIdInput: { // input type
    orderId: number; // Int!
  }
  getOrdersInput: { // input type
    userId: number; // Int!
  }
  getProductInput: { // input type
    id: number; // Int!
  }
  getProductsInput: { // input type
    categoryId?: number | null; // Int
    name?: string | null; // String
    vendorId?: number | null; // Int
  }
  getUserAddressesInput: { // input type
    userId: number; // Int!
  }
  getUserWhereUniqueInput: { // input type
    id: number; // Int!
  }
  loginInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  productImage: { // input type
    url: string; // String!
  }
  removeCartItemWhereUniqueInput: { // input type
    id: number; // Int!
  }
  removeFromFavouritesInput: { // input type
    productId: number; // Int!
  }
  resetPaswwordInput: { // input type
    newPassword: string; // String!
    oldPassword: string; // String!
  }
  updateCategoryInput: { // input type
    name: string; // String!
  }
  updateCategoryWhereUniqueInput: { // input type
    id: number; // Int!
  }
  updateDiscountInput: { // input type
    active?: boolean | null; // Boolean
    name?: string | null; // String
    percent?: number | null; // Int
  }
  updateDiscountWhereUniqueInput: { // input type
    id: number; // Int!
  }
  updateProdcutInput: { // input type
    categoryId?: number | null; // Int
    description?: string | null; // String
    discountId?: number | null; // Int
    image?: string | null; // String
    name?: string | null; // String
    price?: number | null; // Float
  }
  updateProdcutWhereUniqueId: { // input type
    id: number; // Int!
  }
}

export interface NexusGenEnums {
  OrderStatus: "CANCELED" | "COMPLETED" | "ONGOING"
  Role: "CUSTOMER" | "VENDOR"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Address: { // root type
    city: string; // String!
    country: string; // String!
    houseNumber: string; // String!
    id: number; // Int!
    postalCode: string; // String!
    street: string; // String!
    telephone: string; // String!
    userId: number; // Int!
  }
  Cart: { // root type
    CartItem?: NexusGenRootTypes['CartItem'][] | null; // [CartItem!]
    id: number; // Int!
    totalPrice: number; // Float!
    userId: number; // Int!
  }
  CartItem: { // root type
    cartId: number; // Int!
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    quantity: number; // Int!
  }
  Category: { // root type
    createdAt: string; // String!
    id: number; // Int!
    name: string; // String!
    owner: NexusGenRootTypes['User']; // User!
    ownerId: number; // Int!
    updatedAt: string; // String!
  }
  Discount: { // root type
    active: boolean; // Boolean!
    createdAt: string; // String!
    id: number; // Int!
    name: string; // String!
    percent: number; // Int!
    updatedAt: string; // String!
    vendor: NexusGenRootTypes['User']; // User!
    vendorId: number; // Int!
  }
  Favourite: { // root type
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    user: NexusGenRootTypes['User']; // User!
  }
  Inventory: { // root type
    color?: string | null; // String
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    productId: number; // Int!
    quantity: number; // Int!
    size?: string | null; // String
  }
  Mutation: {};
  Order: { // root type
    OrderItem: NexusGenRootTypes['orderItem'][]; // [orderItem!]!
    address: NexusGenRootTypes['Address']; // Address!
    createdAt: string; // String!
    id: number; // Int!
    orderStatus: NexusGenEnums['OrderStatus']; // OrderStatus!
    totalPrice: number; // Float!
    updatedAt: string; // String!
    user: NexusGenRootTypes['User']; // User!
    userId: number; // Int!
  }
  Product: { // root type
    Gallery: NexusGenRootTypes['ProductImage'][]; // [ProductImage!]!
    category: NexusGenRootTypes['Category']; // Category!
    categoryId: number; // Int!
    createdAt: string; // String!
    description: string; // String!
    discountId?: number | null; // Int
    id: number; // Int!
    inventory?: NexusGenRootTypes['Inventory'][] | null; // [Inventory!]
    mainImage: string; // String!
    name: string; // String!
    price: number; // Float!
    updatedAt: string; // String!
    vendorId: number; // Int!
  }
  ProductImage: { // root type
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    productId: number; // Int!
    url: string; // String!
  }
  Query: {};
  User: { // root type
    Address: NexusGenRootTypes['Address'][]; // [Address!]!
    Order: NexusGenRootTypes['Order'][]; // [Order!]!
    balance: number; // Float!
    cart: NexusGenRootTypes['Cart']; // Cart!
    createdAt: string; // String!
    email: string; // String!
    firstName: string; // String!
    id: number; // Int!
    lastName: string; // String!
    password: string; // String!
    phone: string; // String!
    role: NexusGenEnums['Role']; // Role!
    token: string; // String!
    updatedAt: string; // String!
  }
  categories: { // root type
    count: number; // Int!
    nodes: NexusGenRootTypes['Category'][]; // [Category!]!
  }
  discounts: { // root type
    count: number; // Int!
    nodes: NexusGenRootTypes['Discount'][]; // [Discount!]!
  }
  orderItem: { // root type
    createdAt: string; // String!
    id: number; // Int!
    orderId: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    quantity: number; // Int!
    updatedAt: string; // String!
  }
  orders: { // root type
    count: number; // Int!
    nodes: NexusGenRootTypes['Order'][]; // [Order!]!
  }
  products: { // root type
    count: number; // Int!
    nodes: NexusGenRootTypes['Product'][]; // [Product!]!
  }
  vendorOrders: { // root type
    count: number; // Int!
    nodes: NexusGenRootTypes['Order'][]; // [Order!]!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Address: { // field return type
    city: string; // String!
    country: string; // String!
    houseNumber: string; // String!
    id: number; // Int!
    postalCode: string; // String!
    street: string; // String!
    telephone: string; // String!
    userId: number; // Int!
  }
  Cart: { // field return type
    CartItem: NexusGenRootTypes['CartItem'][] | null; // [CartItem!]
    id: number; // Int!
    totalPrice: number; // Float!
    userId: number; // Int!
  }
  CartItem: { // field return type
    cartId: number; // Int!
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    quantity: number; // Int!
  }
  Category: { // field return type
    createdAt: string; // String!
    id: number; // Int!
    name: string; // String!
    owner: NexusGenRootTypes['User']; // User!
    ownerId: number; // Int!
    updatedAt: string; // String!
  }
  Discount: { // field return type
    active: boolean; // Boolean!
    createdAt: string; // String!
    id: number; // Int!
    name: string; // String!
    percent: number; // Int!
    updatedAt: string; // String!
    vendor: NexusGenRootTypes['User']; // User!
    vendorId: number; // Int!
  }
  Favourite: { // field return type
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    user: NexusGenRootTypes['User']; // User!
  }
  Inventory: { // field return type
    color: string | null; // String
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    productId: number; // Int!
    quantity: number; // Int!
    size: string | null; // String
  }
  Mutation: { // field return type
    AddAsFavourite: NexusGenRootTypes['Favourite']; // Favourite!
    addCartItem: NexusGenRootTypes['CartItem']; // CartItem!
    createAddress: NexusGenRootTypes['Address']; // Address!
    createCategory: NexusGenRootTypes['Category']; // Category!
    createDiscount: NexusGenRootTypes['Discount']; // Discount!
    createOrder: NexusGenRootTypes['Order']; // Order!
    createProduct: NexusGenRootTypes['Product']; // Product!
    deleteAddress: NexusGenRootTypes['Address']; // Address!
    deleteCategory: NexusGenRootTypes['Category']; // Category!
    deleteDiscount: NexusGenRootTypes['Discount']; // Discount!
    deleteOrder: NexusGenRootTypes['Order']; // Order!
    deleteProduct: NexusGenRootTypes['Product']; // Product!
    deleteUser: NexusGenRootTypes['User']; // User!
    login: NexusGenRootTypes['User']; // User!
    register: NexusGenRootTypes['User']; // User!
    removeCartItem: NexusGenRootTypes['CartItem']; // CartItem!
    removeFromFavourites: NexusGenRootTypes['Favourite']; // Favourite!
    resetPassword: NexusGenRootTypes['User']; // User!
    updateCategory: NexusGenRootTypes['Category']; // Category!
    updateDiscount: NexusGenRootTypes['Discount']; // Discount!
    updateProdcut: NexusGenRootTypes['Product']; // Product!
  }
  Order: { // field return type
    OrderItem: NexusGenRootTypes['orderItem'][]; // [orderItem!]!
    address: NexusGenRootTypes['Address']; // Address!
    createdAt: string; // String!
    id: number; // Int!
    orderStatus: NexusGenEnums['OrderStatus']; // OrderStatus!
    totalPrice: number; // Float!
    updatedAt: string; // String!
    user: NexusGenRootTypes['User']; // User!
    userId: number; // Int!
  }
  Product: { // field return type
    Gallery: NexusGenRootTypes['ProductImage'][]; // [ProductImage!]!
    category: NexusGenRootTypes['Category']; // Category!
    categoryId: number; // Int!
    createdAt: string; // String!
    description: string; // String!
    discountId: number | null; // Int
    id: number; // Int!
    inventory: NexusGenRootTypes['Inventory'][] | null; // [Inventory!]
    mainImage: string; // String!
    name: string; // String!
    price: number; // Float!
    updatedAt: string; // String!
    vendorId: number; // Int!
  }
  ProductImage: { // field return type
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    productId: number; // Int!
    url: string; // String!
  }
  Query: { // field return type
    categories: NexusGenRootTypes['categories']; // categories!
    discounts: NexusGenRootTypes['discounts']; // discounts!
    getCart: NexusGenRootTypes['Cart']; // Cart!
    getDiscount: NexusGenRootTypes['Discount']; // Discount!
    getFavourites: NexusGenRootTypes['Favourite'][]; // [Favourite!]!
    getOneAddress: NexusGenRootTypes['Address']; // Address!
    getOneCategory: NexusGenRootTypes['Category']; // Category!
    getOneOrder: NexusGenRootTypes['Order']; // Order!
    getOrderItems: NexusGenRootTypes['orderItem'][]; // [orderItem!]!
    getUserAddresses: NexusGenRootTypes['Address'][]; // [Address!]!
    orders: NexusGenRootTypes['orders']; // orders!
    product: NexusGenRootTypes['Product']; // Product!
    products: NexusGenRootTypes['products']; // products!
    user: NexusGenRootTypes['User']; // User!
    vendorOrders: NexusGenRootTypes['vendorOrders']; // vendorOrders!
  }
  User: { // field return type
    Address: NexusGenRootTypes['Address'][]; // [Address!]!
    Order: NexusGenRootTypes['Order'][]; // [Order!]!
    balance: number; // Float!
    cart: NexusGenRootTypes['Cart']; // Cart!
    createdAt: string; // String!
    email: string; // String!
    firstName: string; // String!
    id: number; // Int!
    lastName: string; // String!
    password: string; // String!
    phone: string; // String!
    role: NexusGenEnums['Role']; // Role!
    token: string; // String!
    updatedAt: string; // String!
  }
  categories: { // field return type
    count: number; // Int!
    nodes: NexusGenRootTypes['Category'][]; // [Category!]!
  }
  discounts: { // field return type
    count: number; // Int!
    nodes: NexusGenRootTypes['Discount'][]; // [Discount!]!
  }
  orderItem: { // field return type
    createdAt: string; // String!
    id: number; // Int!
    orderId: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
    quantity: number; // Int!
    updatedAt: string; // String!
  }
  orders: { // field return type
    count: number; // Int!
    nodes: NexusGenRootTypes['Order'][]; // [Order!]!
  }
  products: { // field return type
    count: number; // Int!
    nodes: NexusGenRootTypes['Product'][]; // [Product!]!
  }
  vendorOrders: { // field return type
    count: number; // Int!
    nodes: NexusGenRootTypes['Order'][]; // [Order!]!
  }
}

export interface NexusGenFieldTypeNames {
  Address: { // field return type name
    city: 'String'
    country: 'String'
    houseNumber: 'String'
    id: 'Int'
    postalCode: 'String'
    street: 'String'
    telephone: 'String'
    userId: 'Int'
  }
  Cart: { // field return type name
    CartItem: 'CartItem'
    id: 'Int'
    totalPrice: 'Float'
    userId: 'Int'
  }
  CartItem: { // field return type name
    cartId: 'Int'
    id: 'Int'
    product: 'Product'
    quantity: 'Int'
  }
  Category: { // field return type name
    createdAt: 'String'
    id: 'Int'
    name: 'String'
    owner: 'User'
    ownerId: 'Int'
    updatedAt: 'String'
  }
  Discount: { // field return type name
    active: 'Boolean'
    createdAt: 'String'
    id: 'Int'
    name: 'String'
    percent: 'Int'
    updatedAt: 'String'
    vendor: 'User'
    vendorId: 'Int'
  }
  Favourite: { // field return type name
    id: 'Int'
    product: 'Product'
    user: 'User'
  }
  Inventory: { // field return type name
    color: 'String'
    id: 'Int'
    product: 'Product'
    productId: 'Int'
    quantity: 'Int'
    size: 'String'
  }
  Mutation: { // field return type name
    AddAsFavourite: 'Favourite'
    addCartItem: 'CartItem'
    createAddress: 'Address'
    createCategory: 'Category'
    createDiscount: 'Discount'
    createOrder: 'Order'
    createProduct: 'Product'
    deleteAddress: 'Address'
    deleteCategory: 'Category'
    deleteDiscount: 'Discount'
    deleteOrder: 'Order'
    deleteProduct: 'Product'
    deleteUser: 'User'
    login: 'User'
    register: 'User'
    removeCartItem: 'CartItem'
    removeFromFavourites: 'Favourite'
    resetPassword: 'User'
    updateCategory: 'Category'
    updateDiscount: 'Discount'
    updateProdcut: 'Product'
  }
  Order: { // field return type name
    OrderItem: 'orderItem'
    address: 'Address'
    createdAt: 'String'
    id: 'Int'
    orderStatus: 'OrderStatus'
    totalPrice: 'Float'
    updatedAt: 'String'
    user: 'User'
    userId: 'Int'
  }
  Product: { // field return type name
    Gallery: 'ProductImage'
    category: 'Category'
    categoryId: 'Int'
    createdAt: 'String'
    description: 'String'
    discountId: 'Int'
    id: 'Int'
    inventory: 'Inventory'
    mainImage: 'String'
    name: 'String'
    price: 'Float'
    updatedAt: 'String'
    vendorId: 'Int'
  }
  ProductImage: { // field return type name
    id: 'Int'
    product: 'Product'
    productId: 'Int'
    url: 'String'
  }
  Query: { // field return type name
    categories: 'categories'
    discounts: 'discounts'
    getCart: 'Cart'
    getDiscount: 'Discount'
    getFavourites: 'Favourite'
    getOneAddress: 'Address'
    getOneCategory: 'Category'
    getOneOrder: 'Order'
    getOrderItems: 'orderItem'
    getUserAddresses: 'Address'
    orders: 'orders'
    product: 'Product'
    products: 'products'
    user: 'User'
    vendorOrders: 'vendorOrders'
  }
  User: { // field return type name
    Address: 'Address'
    Order: 'Order'
    balance: 'Float'
    cart: 'Cart'
    createdAt: 'String'
    email: 'String'
    firstName: 'String'
    id: 'Int'
    lastName: 'String'
    password: 'String'
    phone: 'String'
    role: 'Role'
    token: 'String'
    updatedAt: 'String'
  }
  categories: { // field return type name
    count: 'Int'
    nodes: 'Category'
  }
  discounts: { // field return type name
    count: 'Int'
    nodes: 'Discount'
  }
  orderItem: { // field return type name
    createdAt: 'String'
    id: 'Int'
    orderId: 'Int'
    product: 'Product'
    quantity: 'Int'
    updatedAt: 'String'
  }
  orders: { // field return type name
    count: 'Int'
    nodes: 'Order'
  }
  products: { // field return type name
    count: 'Int'
    nodes: 'Product'
  }
  vendorOrders: { // field return type name
    count: 'Int'
    nodes: 'Order'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    AddAsFavourite: { // args
      input: NexusGenInputs['addToFavouriteInput']; // addToFavouriteInput!
    }
    addCartItem: { // args
      input: NexusGenInputs['addCartItemInput']; // addCartItemInput!
    }
    createAddress: { // args
      input: NexusGenInputs['createAddressInput']; // createAddressInput!
    }
    createCategory: { // args
      input: NexusGenInputs['createCategoryInput']; // createCategoryInput!
    }
    createDiscount: { // args
      input: NexusGenInputs['createDiscountInput']; // createDiscountInput!
    }
    createOrder: { // args
      input: NexusGenInputs['createOrderInput']; // createOrderInput!
    }
    createProduct: { // args
      input: NexusGenInputs['createProductInput']; // createProductInput!
    }
    deleteAddress: { // args
      where: NexusGenInputs['getUserWhereUniqueInput']; // getUserWhereUniqueInput!
    }
    deleteCategory: { // args
      where: NexusGenInputs['getOneCategoryWhereUniqueInput']; // getOneCategoryWhereUniqueInput!
    }
    deleteDiscount: { // args
      where: NexusGenInputs['deleteDiscountWhereUniqeInput']; // deleteDiscountWhereUniqeInput!
    }
    deleteOrder: { // args
      where: NexusGenInputs['getOrderInput']; // getOrderInput!
    }
    deleteProduct: { // args
      where: NexusGenInputs['getProductInput']; // getProductInput!
    }
    deleteUser: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    login: { // args
      input: NexusGenInputs['loginInput']; // loginInput!
    }
    register: { // args
      input: NexusGenInputs['createUserInput']; // createUserInput!
    }
    removeCartItem: { // args
      where: NexusGenInputs['removeCartItemWhereUniqueInput']; // removeCartItemWhereUniqueInput!
    }
    removeFromFavourites: { // args
      where: NexusGenInputs['removeFromFavouritesInput']; // removeFromFavouritesInput!
    }
    resetPassword: { // args
      input: NexusGenInputs['resetPaswwordInput']; // resetPaswwordInput!
    }
    updateCategory: { // args
      input: NexusGenInputs['updateCategoryInput']; // updateCategoryInput!
      where: NexusGenInputs['updateCategoryWhereUniqueInput']; // updateCategoryWhereUniqueInput!
    }
    updateDiscount: { // args
      input: NexusGenInputs['updateDiscountInput']; // updateDiscountInput!
      where: NexusGenInputs['updateDiscountWhereUniqueInput']; // updateDiscountWhereUniqueInput!
    }
    updateProdcut: { // args
      input: NexusGenInputs['updateProdcutInput']; // updateProdcutInput!
      productId: NexusGenInputs['updateProdcutWhereUniqueId']; // updateProdcutWhereUniqueId!
    }
  }
  Query: {
    categories: { // args
      name?: string | null; // String
      skip: number; // Int!
      take: number; // Int!
    }
    discounts: { // args
      skip: number; // Int!
      take: number; // Int!
    }
    getDiscount: { // args
      where: NexusGenInputs['updateDiscountWhereUniqueInput']; // updateDiscountWhereUniqueInput!
    }
    getOneAddress: { // args
      where: NexusGenInputs['getUserWhereUniqueInput']; // getUserWhereUniqueInput!
    }
    getOneCategory: { // args
      where: NexusGenInputs['getOneCategoryWhereUniqueInput']; // getOneCategoryWhereUniqueInput!
    }
    getOneOrder: { // args
      where: NexusGenInputs['getOrderInput']; // getOrderInput!
    }
    getOrderItems: { // args
      where: NexusGenInputs['getOrderItemsIdInput']; // getOrderItemsIdInput!
    }
    getUserAddresses: { // args
      where: NexusGenInputs['getUserAddressesInput']; // getUserAddressesInput!
    }
    orders: { // args
      skip: number; // Int!
      take: number; // Int!
      where: NexusGenInputs['getOrdersInput']; // getOrdersInput!
    }
    product: { // args
      where: NexusGenInputs['getProductInput']; // getProductInput!
    }
    products: { // args
      skip: number; // Int!
      take: number; // Int!
      where: NexusGenInputs['getProductsInput']; // getProductsInput!
    }
    vendorOrders: { // args
      skip: number; // Int!
      take: number; // Int!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}