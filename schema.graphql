### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Address {
  city: String!
  country: String!
  houseNumber: String!
  id: Int!
  postalCode: String!
  street: String!
  telephone: String!
  userId: Int!
}

type Cart {
  id: Int!
  items: [CartItem!]!
  totalPrice: Float!
  userId: Int!
}

type CartItem {
  cartId: Int!
  id: Int!
  productId: Int!
  quantity: Int!
}

type Category {
  createdAt: String!
  id: Int!
  name: String!
  updatedAt: String!
}

type Discount {
  active: Boolean!
  createdAt: String!
  id: Int!
  name: String!
  percent: Int!
  updatedAt: String!
}

type Mutation {
  addCartItem(input: addCartItemInput!): CartItem!
  createAddress(input: createAddressInput!): Address!
  createCategory(input: createCategoryInput!): Category!
  createOrder(input: createOrderInput!): Order!
  createOrderItem(input: createOrderItemInput!): orderItem!
  createProduct(input: createProductInput!): Product!
  deleteAddress(where: getUserWhereUniqueInput!): Address!
  deleteCategory(where: getOneCategoryWhereUniqueInput!): Category!
  deleteOrder(where: getOrderInput!): Order!
  deleteProduct(where: getProductInput!): Product!
  deleteUser(where: UserWhereUniqueInput!): User!
  register(input: createUserInput!): User!
  removeCartItem(where: removeCartItemWhereUniqueInput!): CartItem!
  updateProdcut(input: updateProdcutInput!, productId: updateProdcutWhereUniqueId!): Product!
}

type Order {
  addressId: Int!
  createdAt: String!
  id: Int!
  orderStatus: OrderStatus!
  totalPrice: Float!
  updatedAt: String!
  userId: Int!
}

"""The first Star Wars episodes released"""
enum OrderStatus {
  CANCELED
  COMPLETED
  ONGOING
}

type Product {
  categoryId: Int!
  createdAt: String!
  description: String!
  discountId: Int
  id: Int!
  image: String!
  name: String!
  price: Float!
  updatedAt: String!
}

type Query {
  createDiscount(input: createDiscountInput!): Discount!
  getCart(where: getCartWhereUniqueInput!): Cart!
  getCategories: [Category!]!
  getManyOrders(where: getOrdersInput!): [Order!]!
  getOneAddress(where: getUserWhereUniqueInput!): Address!
  getOneCategory(where: getOneCategoryWhereUniqueInput!): Category!
  getOneOrder(where: getOrderInput!): Order!
  getOrderItems(where: getOrderItemsIdInput!): [orderItem!]!
  getProduct(where: getProductInput!): Product!
  getProducts(where: getProductsInput!): [Product!]!
  getUserAddresses(where: getUserAddressesInput!): [Address!]!
  user(where: UserWhereUniqueInput!): User!
}

type User {
  balance: Float!
  createdAt: String!
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  password: String!
  phone: String!
  updatedAt: String!
}

input UserWhereUniqueInput {
  id: Int!
}

input addCartItemInput {
  cartId: Int!
  productId: Int!
  quantity: Int!
}

input createAddressInput {
  city: String!
  country: String!
  houseNumber: String!
  postalCode: String!
  street: String!
  telephone: String!
  userId: Int!
}

input createCategoryInput {
  name: String!
}

input createDiscountInput {
  active: Boolean! = false
  name: String!
  percent: Int!
}

input createOrderInput {
  addressId: Int!
  orderStatus: OrderStatus!
  totalPrice: Float!
  userId: Int!
}

input createOrderItemInput {
  orderId: Int
  productId: Int
  quantity: Int
}

input createProductInput {
  categoryId: Int!
  description: String!
  discountId: Int
  image: String!
  name: String!
  price: Float!
}

input createUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
}

input getCartWhereUniqueInput {
  userId: Int!
}

input getOneCategoryWhereUniqueInput {
  id: Int!
}

input getOrderInput {
  id: Int!
}

input getOrderItemsIdInput {
  orderId: Int!
}

input getOrdersInput {
  userId: Int!
}

input getProductInput {
  id: Int!
}

input getProductsInput {
  categoryId: Int!
}

input getUserAddressesInput {
  userId: Int!
}

input getUserWhereUniqueInput {
  id: Int!
}

type orderItem {
  createdAt: String!
  id: Int!
  orderId: Int!
  productId: Int!
  quantity: Int!
  updatedAt: String!
}

input removeCartItemWhereUniqueInput {
  id: Int!
}

input updateProdcutInput {
  categoryId: Int
  description: String
  discountId: Int
  image: String
  name: String
  price: Float
}

input updateProdcutWhereUniqueId {
  id: Int!
}