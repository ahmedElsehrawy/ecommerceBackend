### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Address {
  city: String!
  country: String!
  houseNumber: String!
  id: Int!
  postalCode: String!
  street: String!
  telephone: String!
  userId: Int!
}

type Category {
  createdAt: String!
  id: Int!
  name: String!
  updatedAt: String!
}

type Mutation {
  createAddress(input: createAddressInput!): Address!
  createCategory(input: createCategoryInput!): Category!
  createOrder(input: createOrderInput!): Order!
  createOrderItem(input: createOrderItemInput!): orderItem!
  createProduct(input: createProductInput!): Product!
  register(input: createUserInput!): User!
}

type Order {
  addressId: Int!
  createdAt: String!
  id: Int!
  orderStatus: OrderStatus!
  totalPrice: Float!
  updatedAt: String!
  userId: Int!
}

"""The first Star Wars episodes released"""
enum OrderStatus {
  CANCELED
  COMPLETED
  ONGOING
}

type Product {
  categoryId: Int!
  createdAt: String!
  description: String!
  discountId: Int
  id: Int!
  image: String!
  name: String!
  price: Float!
  updatedAt: String!
}

type Query {
  getOrder(where: getOrderInput!): Order!
  getOrderItems(where: getOrderItemsIdInput!): [orderItem!]!
  getProduct(where: getProductInput!): Product!
  user(where: UserWhereUniqueInput!): User!
}

type User {
  balance: Float!
  createdAt: String!
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  password: String!
  phone: String!
  updatedAt: String!
}

input UserWhereUniqueInput {
  id: Int!
}

input createAddressInput {
  city: String!
  country: String!
  houseNumber: String!
  postalCode: String!
  street: String!
  telephone: String!
  userId: Int!
}

input createCategoryInput {
  name: String!
}

input createOrderInput {
  addressId: Int!
  orderStatus: OrderStatus!
  totalPrice: Float!
  userId: Int!
}

input createOrderItemInput {
  orderId: Int
  productId: Int
  quantity: Int
}

input createProductInput {
  categoryId: Int!
  description: String!
  discountId: Int
  image: String!
  name: String!
  price: Float!
}

input createUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
}

input getOrderInput {
  id: Int!
}

input getOrderItemsIdInput {
  orderId: Int!
}

input getProductInput {
  id: Int!
}

type orderItem {
  createdAt: String!
  id: Int!
  orderId: Int!
  productId: Int!
  quantity: Int!
  updatedAt: String!
}