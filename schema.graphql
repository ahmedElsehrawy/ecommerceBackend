### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Address {
  city: String!
  country: String!
  houseNumber: String!
  id: Int!
  postalCode: String!
  street: String!
  telephone: String!
  userId: Int!
}

type Cart {
  CartItem: [CartItem!]
  id: Int!
  totalPrice: Float!
  userId: Int!
}

type CartItem {
  cartId: Int!
  id: Int!
  product: Product!
  quantity: Int!
}

type Category {
  createdAt: String!
  id: Int!
  name: String!
  owner: User!
  ownerId: Int!
  product: [Product!]!
  updatedAt: String!
}

type Comment {
  commentOwnerId: Int!
  commentText: String!
  createdAt: String!
  id: Int!
  product: Product!
  productId: Int!
  updatedAt: String!
  user: User!
}

type Discount {
  active: Boolean!
  createdAt: String!
  id: Int!
  name: String!
  percent: Int!
  updatedAt: String!
  vendor: User!
  vendorId: Int!
}

type Favourite {
  id: Int!
  product: Product!
  user: User!
}

type Inventory {
  color: String
  id: Int!
  product: Product!
  productId: Int!
  quantity: Int!
  size: String
}

type Mutation {
  AddAsFavourite(input: addToFavouriteInput!): Favourite!
  addCartItem(input: addCartItemInput!): CartItem!
  createAddress(input: createAddressInput!): Address!
  createCategory(input: createCategoryInput!): Category!
  createComment(input: createCommentInput!): Comment!
  createDiscount(input: createDiscountInput!): Discount!
  createOrder(input: createOrderInput!): Order!
  createProduct(input: createProductInput!): Product!
  createRating(input: createRatingInput!): Rating!
  deleteAddress(where: getUserWhereUniqueInput!): Address!
  deleteCategory(where: getOneCategoryWhereUniqueInput!): Category!
  deleteDiscount(where: deleteDiscountWhereUniqeInput!): Discount!
  deleteOrder(where: getOrderInput!): Order!
  deleteProduct(where: getProductInput!): Product!
  deleteUser(where: UserWhereUniqueInput!): User!
  login(input: loginInput!): User!
  register(input: createUserInput!): User!
  removeCartItem(where: removeCartItemWhereUniqueInput!): CartItem!
  removeFromFavourites(where: removeFromFavouritesInput!): Favourite!
  resetPassword(input: resetPaswwordInput!): User!
  updateCategory(input: updateCategoryInput!, where: updateCategoryWhereUniqueInput!): Category!
  updateDiscount(input: updateDiscountInput!, where: updateDiscountWhereUniqueInput!): Discount!
  updateProdcut(input: updateProdcutInput!, productId: updateProdcutWhereUniqueId!): Product!
}

type Order {
  OrderItem: [orderItem!]!
  address: Address!
  createdAt: String!
  id: Int!
  orderStatus: OrderStatus!
  totalPrice: Float!
  updatedAt: String!
  user: User!
  userId: Int!
}

"""The first Star Wars episodes released"""
enum OrderStatus {
  CANCELED
  COMPLETED
  ONGOING
}

type Product {
  Comment: [Comment!]!
  Gallery: [ProductImage!]!
  Inventory: [Inventory!]!
  averageRatingValue: Int!
  category: Category!
  categoryId: Int!
  createdAt: String!
  description: String!
  discountId: Int
  id: Int!
  mainImage: String!
  name: String!
  price: Float!
  updatedAt: String!
  vendorId: Int!
}

type ProductImage {
  id: Int!
  product: Product!
  productId: Int!
  url: String!
}

type Query {
  categories(name: String, skip: Int!, take: Int!): categories!
  comment(where: getCommentInput!): Comment!
  discounts(skip: Int!, take: Int!): discounts!
  getCart: Cart!
  getComments(where: getCommentsInput!): [Comment!]!
  getDiscount(where: updateDiscountWhereUniqueInput!): Discount!
  getFavourites: [Favourite!]!
  getOneAddress(where: getUserWhereUniqueInput!): Address!
  getOneCategory(where: getOneCategoryWhereUniqueInput!): Category!
  getOneOrder(where: getOrderInput!): Order!
  getOrderItems(where: getOrderItemsIdInput!): [orderItem!]!
  getUserAddresses(where: getUserAddressesInput!): [Address!]!
  orders(skip: Int!, take: Int!, where: getOrdersInput!): orders!
  product(where: getProductInput!): Product!
  products(skip: Int!, take: Int!, where: getProductsInput!): products!
  user: User!
  vendorOrders(skip: Int!, take: Int!): vendorOrders!
}

type Rating {
  id: Int!
  product: Product!
  productId: Int!
  ratingValue: Int!
  user: User!
  userId: Int!
}

enum Role {
  CUSTOMER
  VENDOR
}

type User {
  Address: [Address!]!
  Comment: [Comment!]!
  Order: [Order!]!
  balance: Float!
  cart: Cart!
  createdAt: String!
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  password: String!
  phone: String!
  role: Role!
  token: String!
  updatedAt: String!
}

input UserWhereUniqueInput {
  id: Int!
}

input addCartItemInput {
  productId: Int!
  quantity: Int!
}

input addToFavouriteInput {
  productId: Int!
  userId: Int!
}

input cartItemInput {
  productId: Int!
  quantity: Int!
}

type categories {
  count: Int!
  nodes: [Category!]!
}

input createAddressInput {
  city: String!
  country: String!
  houseNumber: String!
  postalCode: String!
  street: String!
  telephone: String!
  userId: Int!
}

input createCategoryInput {
  name: String!
}

input createCommentInput {
  commentOwnerId: Int!
  commentText: String!
  productId: Int!
}

input createDiscountInput {
  active: Boolean! = false
  name: String!
  percent: Int!
}

input createOrderInput {
  addressId: Int!
  products: [cartItemInput]!
  userId: Int!
}

input createProductInput {
  categoryId: Int!
  description: String!
  discountId: Int
  gallery: [productImage]
  mainImage: String!
  name: String!
  price: Float!
}

input createRatingInput {
  productId: Int!
  ratingValue: Int!
  userId: Int!
}

input createUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
}

input deleteDiscountWhereUniqeInput {
  id: Int!
}

type discounts {
  count: Int!
  nodes: [Discount!]!
}

input getCommentInput {
  commentId: ID!
}

input getCommentsInput {
  productId: ID!
}

input getOneCategoryWhereUniqueInput {
  id: Int!
}

input getOrderInput {
  id: Int!
}

input getOrderItemsIdInput {
  orderId: Int!
}

input getOrdersInput {
  userId: Int!
}

input getProductInput {
  id: Int!
}

input getProductsInput {
  categoryId: Int
  name: String
  vendorId: Int
}

input getUserAddressesInput {
  userId: Int!
}

input getUserWhereUniqueInput {
  id: Int!
}

input loginInput {
  email: String!
  password: String!
}

type orderItem {
  createdAt: String!
  id: Int!
  orderId: Int!
  product: Product!
  quantity: Int!
  updatedAt: String!
}

type orders {
  count: Int!
  nodes: [Order!]!
}

input productImage {
  url: String!
}

type products {
  count: Int!
  nodes: [Product!]!
}

input removeCartItemWhereUniqueInput {
  id: Int!
}

input removeFromFavouritesInput {
  productId: Int!
}

input resetPaswwordInput {
  newPassword: String!
  oldPassword: String!
}

input updateCategoryInput {
  name: String!
}

input updateCategoryWhereUniqueInput {
  id: Int!
}

input updateDiscountInput {
  active: Boolean = false
  name: String
  percent: Int
}

input updateDiscountWhereUniqueInput {
  id: Int!
}

input updateProdcutInput {
  categoryId: Int
  description: String
  discountId: Int
  image: String
  name: String
  price: Float
}

input updateProdcutWhereUniqueId {
  id: Int!
}

type vendorOrders {
  count: Int!
  nodes: [Order!]!
}